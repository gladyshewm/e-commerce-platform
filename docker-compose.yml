services:
  api-gateway:
    build: 
      context: ./server
      dockerfile: apps/api-gateway/Dockerfile
    ports:
      - "3000:3000"
    env_file:
      - ./server/apps/api-gateway/.env
    depends_on:
      - redis
      - rmq
      - auth
      - user
    networks:
      - default
    develop:
      watch:
        - path: ./server/apps/api-gateway
          target: /usr/src/app/apps/api-gateway
          action: sync
        - path: ./server/libs
          target: /usr/src/app/libs
          action: sync

  auth:
    build:
      context: ./server
      dockerfile: apps/auth/Dockerfile
    env_file:
      - ./server/apps/auth/.env
    networks:
      - default
    develop:
      watch:
        - path: ./server/apps/auth
          target: /usr/src/app/apps/auth
          action: sync
        - path: ./server/libs
          target: /usr/src/app/libs
          action: sync
    depends_on:
      - postgres

  user:
    build:
      context: ./server
      dockerfile: apps/user/Dockerfile
    env_file:
      - ./server/apps/user/.env
    networks:
      - default
    develop:
      watch:
        - path: ./server/apps/user
          target: /usr/src/app/apps/user
          action: sync
        - path: ./server/libs
          target: /usr/src/app/libs
          action: sync
    depends_on:
      - postgres

  product:
    build:
      context: ./server
      dockerfile: apps/product/Dockerfile
    env_file:
      - ./server/apps/product/.env
    networks:
      - default
    develop:
      watch:
        - path: ./server/apps/product
          target: /usr/src/app/apps/product
          action: sync
        - path: ./server/libs
          target: /usr/src/app/libs
          action: sync
    depends_on:
      - postgres
  
  order:
    build:
      context: ./server
      dockerfile: apps/order/Dockerfile
    env_file:
      - ./server/apps/order/.env
    networks:
      - default
    develop:
      watch:
        - path: ./server/apps/order
          target: /usr/src/app/apps/order
          action: sync
        - path: ./server/libs
          target: /usr/src/app/libs
          action: sync
    depends_on:
      - postgres

  rmq:
    image: rabbitmq:4-management-alpine
    env_file: .env
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_DEFAULT_USER}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_DEFAULT_PASS}
    ports:
      - '5672:5672'
      - '15672:15672'
    networks:
      - default
      - rmq_network

  postgres:
    image: postgres:alpine
    restart: always
    ports:
      - '5433:5432'
    env_file: '.env'
    networks:
      - default
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - pgdata:/var/lib/postgresql/data

  redis:
    image: redis:alpine
    restart: always
    env_file: ".env"
    environment:
      REDIS_PASSWORD: ${REDIS_PASSWORD}
      REDIS_USER: ${REDIS_USER}
      REDIS_USER_PASSWORD: ${REDIS_USER_PASSWORD}
    ports:
      - '6379:6379'
    networks:
      - default
    volumes:
      - redisdata:/data

volumes:
  pgdata:
    driver: local

  redisdata:
    driver: local

networks:
  default:
    driver: bridge

  rmq_network:
    driver: bridge